# Tox (https://tox.readthedocs.io) is a tool for running tests in multiple
# virtualenvs. "pip install tox>3.18" and run "tox" from this directory.

# Adapted from Tornado's tox.ini.

[tox]
requires =
    tox>=4

envlist =
    # Run the unit test suite
    test
    # Ensure the sphinx build has no errors or warnings.
    docs,
    # Run the doctests, include examples and tutorial, via Sphinx.
    doctest,
    # Check links of sphinx docs
    checklink,
    # Test with the latest PyMongo.
    test-pymongo-latest,
    # Apply PyMongo's test suite to Motor via Synchro.
    synchro
    # Run pre-commit on all files.
    lint
    # Run pre-commit on all files with manual checks.
    lint-manual
    # Check the sdist integrity.
    manifest

labels = # Use labels and -m instead of -e so that tox -m <label> fails instantly if the label does not exist
    test = test
    docs = docs
    doctest = doctest
    checklink = checklink
    test-pymongo-latest = test-pymongo-latest
    synchro = synchro
    lint = lint
    lint-manual = lint-manual
    manifest = manifest

[testenv]
passenv =
    DB_IP
    DB_PORT
    DB_USER
    DB_PASSWORD
    CERT_DIR
    ASYNC_TEST_TIMEOUT
    FLE_AWS_KEY
    FLE_AWS_SECRET
    FLE_AZURE_CLIENTID
    FLE_AZURE_TENANTID
    FLE_AZURE_CLIENTSECRET
    FLE_GCP_EMAIL
    FLE_GCP_PRIVATEKEY
    AIOHTTP_NO_EXTENSIONS

[testenv:test]
commands =
    python --version
    python -m pytest -v {posargs}
extras =
    test

[testenv:docs]
setenv = PYTHONWARNINGS=
deps =
    -rdoc/docs-requirements.txt
changedir = doc
commands =
    python -m sphinx -q -E -W -b html . {envtmpdir}/html {posargs}

[testenv:doctest]
setenv = PYTHONHASHSEED=0
deps =
    -rdoc/docs-requirements.txt
changedir = doc
commands =
    python -m sphinx -q -E -b doctest . {envtmpdir}/doctest {posargs}

[testenv:linkcheck]
setenv = PYTHONHASHSEED=0
deps =
    -rdoc/docs-requirements.txt
changedir = doc
commands =
    python -m sphinx -q -E -b linkcheck . {envtmpdir}/linkcheck {posargs}

[testenv:test-pymongo-latest]
extras =
    encryption
    test
commands =
    pip install git+https://github.com/mongodb/mongo-python-driver.git@master
    pip install --pre pymongocrypt
    python --version
    python -c "import pymongo; print('PyMongo %s' % (pymongo.version,))"
    python -m pytest -v {posargs}

[testenv:synchro]
allowlist_externals =
    git
setenv =
    PYTHONPATH = {envtmpdir}/mongo-python-driver
commands =
    git clone --depth 1 --branch master https://github.com/mongodb/mongo-python-driver.git {envtmpdir}/mongo-python-driver
    python3 -m pip install -e {envtmpdir}/mongo-python-driver
    python3 -m synchro.synchrotest --with-xunit --xunit-file=xunit-synchro-results -v -w {envtmpdir}/mongo-python-driver {posargs}

[testenv:lint]
deps =
    pre-commit
commands =
    python -m pre_commit run --all-files

[testenv:lint-manual]
deps =
    pre-commit
commands =
    python -m pre_commit run --all-files --hook-stage=manual

[testenv:manifest]
deps =
    check-manifest
commands =
    python -m check_manifest -v

[flake8]
max-line-length = 100
enable-extensions = G
extend-ignore =
    G200, G202, G001
    # black adds spaces around ':'
    E203,
    # E501 line too long (let black handle line length)
    E501
    # B305 `.next()` is not a thing on Python 3. Use the `next()` builtin. For Python 2 compatibility, use `six.next()`.
    B305
per-file-ignores =
    # F841 local variable 'foo' is assigned to but never used
    # E731 do not assign a lambda expression, use a def
    # F811 redefinition of unused 'foo' from line XXX
    test/*/test_examples.py: F841,E731,F811

    # F811 redefinition of unused 'foo' from line XXX
    # B011 Do not call assert False since python -O removes these calls. Instead callers should raise AssertionError().

    test/*: F811,B011

    # E402 module level import not at top of file
    doc/examples/monitoring_example.py: E402

    # F403 'from foo import *' used; unable to detect undefined names
    # F401 'foo' imported but unused
    synchro/__init__.py: F403,F401

    # F401 'foo' imported but unused
    motor/__init__.py: F401
