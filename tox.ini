# Tox (https://tox.readthedocs.io) is a tool for running tests in multiple
# virtualenvs. "pip install tox>3.18" and run "tox" from this directory.

# Adapted from Tornado's tox.ini.

[tox]
envlist =
    # Tornado 5 supports Python 3.4+.
    tornado5-{py37},

    # Tornado 6 supports Python 3.5+.
    tornado6-{pypy37,py37,py38,py39,py310,py311},

    # Test Tornado's dev version in a few configurations.
    tornado_git-{py37,py38},

    # Ensure the sphinx build has no errors or warnings.
    py3-sphinx-docs,

    # Run the doctests, include examples and tutorial, via Sphinx.
    py3-sphinx-doctest,

    # asyncio without Tornado.
    asyncio-{py37,py38,py39,py310,py311},

    # Test with the latest PyMongo.
    py3-pymongo-latest,

    # Apply PyMongo's test suite to Motor via Synchro.
    synchro37

    # Run pre-commit on all files.
    lint

    # Check the sdist integrity.
    manifest

[testenv]
passenv =
    DB_IP
    DB_PORT
    DB_USER
    DB_PASSWORD
    CERT_DIR
    ASYNC_TEST_TIMEOUT
    FLE_AWS_KEY
    FLE_AWS_SECRET
    FLE_AZURE_CLIENTID
    FLE_AZURE_TENANTID
    FLE_AZURE_CLIENTSECRET
    FLE_GCP_EMAIL
    FLE_GCP_PRIVATEKEY


basepython =
    py37,synchro37: {env:PYTHON_BINARY:python3.7}
    py38: {env:PYTHON_BINARY:python3.8}
    py39: {env:PYTHON_BINARY:python3.9}
    py310: {env:PYTHON_BINARY:python3.10}
    py311: {env:PYTHON_BINARY:python3.11}
    pypy37: {env:PYTHON_BINARY:pypy3}

    # Default Python 3 when we don't care about minor version.
    py3,lint,manifest: {env:PYTHON_BINARY:python3}

deps =
    tornado5: tornado>=5,<6
    tornado6: tornado>=6,<7
    tornado_git: git+https://github.com/tornadoweb/tornado.git

    {py37,py38,py39,py310,py311}: aiohttp

    sphinx: sphinx
    sphinx: aiohttp
    sphinx: tornado

    py3-pymongo-latest: tornado>=5,<6

    synchro37: tornado>=6,<7
    synchro37: nose

setenv =
    PYTHONWARNINGS="error,ignore:The distutils package is deprecated:DeprecationWarning"
commands =
    python --version
    python setup.py test --xunit-output=xunit-results {posargs}

extras =
    encryption

[testenv:py3-sphinx-docs]
setenv = PYTHONWARNINGS=
changedir = doc
commands =
    sphinx-build -q -E -W -b html . {envtmpdir}/html {posargs}

[testenv:py3-sphinx-doctest]
setenv = PYTHONHASHSEED=0
changedir = doc
commands =
    sphinx-build -q -E -b doctest . {envtmpdir}/doctest {posargs}

[testenv:py3-sphinx-linkcheck]
setenv = PYTHONHASHSEED=0
changedir = doc
commands =
    sphinx-build -q -E -b linkcheck . {envtmpdir}/linkcheck {posargs}

[testenv:py3-pymongo-latest]
commands =
    pip install git+https://github.com/mongodb/mongo-python-driver.git@master#egg=pymongo[encryption]
    python --version
    python -c "import pymongo; print('PyMongo %s' % (pymongo.version,))"
    python setup.py test --xunit-output=xunit-results {posargs}

[testenv:synchro37]
allowlist_externals =
    git
setenv =
    PYTHONPATH = {envtmpdir}/mongo-python-driver
commands =
    git clone --depth 1 --branch master https://github.com/mongodb/mongo-python-driver.git {envtmpdir}/mongo-python-driver
    python3 -m pip install -e {envtmpdir}/mongo-python-driver
    python3 -m synchro.synchrotest --with-xunit --xunit-file=xunit-synchro-results -v -w {envtmpdir}/mongo-python-driver {posargs}

[testenv:lint]
deps =
    pre-commit
commands =
    pre-commit run --all-files

[testenv:manifest]
deps =
    check-manifest
commands =
    check-manifest -v

[gh-actions]
# Map GitHub Actions python-version to environment using tox-github-actions.
python =
    3.7: py37
    3.11: py311,manifest

[flake8]
max-line-length = 100
enable-extensions = G
extend-ignore =
    G200, G202, G001
    # black adds spaces around ':'
    E203,
    # E501 line too long (let black handle line length)
    E501
    # B305 `.next()` is not a thing on Python 3. Use the `next()` builtin. For Python 2 compatibility, use `six.next()`.
    B305
per-file-ignores =
    # F841 local variable 'foo' is assigned to but never used
    # E731 do not assign a lambda expression, use a def
    # F811 redefinition of unused 'foo' from line XXX
    test/*/test_examples.py: F841,E731,F811

    # F811 redefinition of unused 'foo' from line XXX
    # B011 Do not call assert False since python -O removes these calls. Instead callers should raise AssertionError().

    test/*: F811,B011

    # E402 module level import not at top of file
    doc/examples/monitoring_example.py: E402

    # F403 'from foo import *' used; unable to detect undefined names
    # F401 'foo' imported but unused
    synchro/__init__.py: F403,F401

    # F401 'foo' imported but unused
    motor/__init__.py: F401
